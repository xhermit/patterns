里氏替换原则(LSP)
　　该原则称为Liskov Substitution Principle——里氏替换原则。林先生在上课时风趣地称之为“老鼠的儿子会打洞”。


http://hi.baidu.com/springlie/blog/item/ab3b86024a2caa074afb5132.html

里氏替换原则

用书面语解释就是：
	一个软件实体如果使用的是一个父类的话，那么一定适用于其子类，而且它察觉不出父类对象和子类对象的区别。
	也就是说，在软件里面，把父类都替换成它的子类，程序的行为没有变化。

用行话解释就是：
	只有当子类可以替换掉父类，软件单位的功能不受到影响时，父类才能真正被复用，而子类也能够在父类的基础上增加新的行为。
	由于子类型的可替换性才使得使用父类类型的模块在无须修改的情况下就可以扩展。

用土话解释就是：
	在代码里很大一部分逻辑功能，都是用父类的对象实现的。具体要体现哪一个子类的特性，只要在代码开始时将这个子类对象转换成父类对象即可。
	里氏替换原则保证了两个子类拥有相同的属性和方法，并且都可以替换成父类对象，以父类对象的身份在代码中执行，这样就使得大多数关于
	父类的逻辑代码可以最大范围地被复用。子类可以重写父类的方法，但是，每个子类都必须保证实现了父类在逻辑代码中的每一个用到的方法
